environments:
  default:
    values:
      - ../params.yaml
      -
        self:
          namespace: unique

---

repositories:
  - name: zitadel
    url: https://charts.zitadel.com
  - name: bedag
    url: https://bedag.github.io/helm-charts

releases:
  - name: zitadel-certs
    chart: bedag/raw
    namespace: {{ .Values.self.namespace }}
    version: 2.0.0
    wait: false
    values:
      - resources:
          - kind: Secret
            apiVersion: v1
            metadata:
              name: {{ .Values.plain.zitadel.secretCerts.secretName }}
            # This cert is public - DigiCert Global Root CA
            # https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/how-to-connect-tls-ssl#applications-that-require-certificate-verification-for-tlsssl-connectivity
            stringData:
              ca.crt: |-
                # subject=C=US, O=DigiCert Inc, OU=www.digicert.com, CN=DigiCert Global Root CA
                -----BEGIN CERTIFICATE-----
                MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh
                MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
                d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
                QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT
                MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
                b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG
                9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB
                CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97
                nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt
                43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P
                T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4
                gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO
                BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR
                TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw
                DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr
                hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg
                06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF
                PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls
                YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk
                CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
                -----END CERTIFICATE-----

                # subject=C=US, O=DigiCert Inc, OU=www.digicert.com, CN=DigiCert Global Root G2
                -----BEGIN CERTIFICATE-----
                MIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBh
                MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
                d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBH
                MjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVT
                MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
                b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEcyMIIBIjANBgkqhkiG
                9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN9RlUyfuI
                2/Ou8jqJkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx
                1x7e/dfgy5SDN67sH0NO3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQ
                q2EGnI/yuum06ZIya7XzV+hdG82MHauVBJVJ8zUtluNJbd134/tJS7SsVQepj5Wz
                tCO7TG1F8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyMUNGPHgm+F6HmIcr9g+UQ
                vIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQABo0IwQDAP
                BgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV
                5uNu5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY
                1Yl9PMWLSn/pvtsrF9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4
                NeF22d+mQrvHRAiGfzZ0JFrabA0UWTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NG
                Fdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBHQRFXGU7Aj64GxJUTFy8bJZ91
                8rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/iyK5S9kJRaTe
                pLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTfl
                MrY=
                -----END CERTIFICATE-----

                # subject=C=US, O=Microsoft Corporation, CN=Microsoft RSA Root Certificate Authority 2017
                -----BEGIN CERTIFICATE-----
                MIIFqDCCA5CgAwIBAgIQHtOXCV/YtLNHcB6qvn9FszANBgkqhkiG9w0BAQwFADBl
                MQswCQYDVQQGEwJVUzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYw
                NAYDVQQDEy1NaWNyb3NvZnQgUlNBIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5
                IDIwMTcwHhcNMTkxMjE4MjI1MTIyWhcNNDIwNzE4MjMwMDIzWjBlMQswCQYDVQQG
                EwJVUzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYwNAYDVQQDEy1N
                aWNyb3NvZnQgUlNBIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTcwggIi
                MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKW76UM4wplZEWCpW9R2LBifOZ
                Nt9GkMml7Xhqb0eRaPgnZ1AzHaGm++DlQ6OEAlcBXZxIQIJTELy/xztokLaCLeX0
                ZdDMbRnMlfl7rEqUrQ7eS0MdhweSE5CAg2Q1OQT85elss7YfUJQ4ZVBcF0a5toW1
                HLUX6NZFndiyJrDKxHBKrmCk3bPZ7Pw71VdyvD/IybLeS2v4I2wDwAW9lcfNcztm
                gGTjGqwu+UcF8ga2m3P1eDNbx6H7JyqhtJqRjJHTOoI+dkC0zVJhUXAoP8XFWvLJ
                jEm7FFtNyP9nTUwSlq31/niol4fX/V4ggNyhSyL71Imtus5Hl0dVe49FyGcohJUc
                aDDv70ngNXtk55iwlNpNhTs+VcQor1fznhPbRiefHqJeRIOkpcrVE7NLP8TjwuaG
                YaRSMLl6IE9vDzhTyzMMEyuP1pq9KsgtsRx9S1HKR9FIJ3Jdh+vVReZIZZ2vUpC6
                W6IYZVcSn2i51BVrlMRpIpj0M+Dt+VGOQVDJNE92kKz8OMHY4Xu54+OU4UZpyw4K
                UGsTuqwPN1q3ErWQgR5WrlcihtnJ0tHXUeOrO8ZV/R4O03QK0dqq6mm4lyiPSMQH
                +FJDOvTKVTUssKZqwJz58oHhEmrARdlns87/I6KJClTUFLkqqNfs+avNJVgyeY+Q
                W5g5xAgGwax/Dj0ApQIDAQABo1QwUjAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/
                BAUwAwEB/zAdBgNVHQ4EFgQUCctZf4aycI8awznjwNnpv7tNsiMwEAYJKwYBBAGC
                NxUBBAMCAQAwDQYJKoZIhvcNAQEMBQADggIBAKyvPl3CEZaJjqPnktaXFbgToqZC
                LgLNFgVZJ8og6Lq46BrsTaiXVq5lQ7GPAJtSzVXNUzltYkyLDVt8LkS/gxCP81OC
                gMNPOsduET/m4xaRhPtthH80dK2Jp86519efhGSSvpWhrQlTM93uCupKUY5vVau6
                tZRGrox/2KJQJWVggEbbMwSubLWYdFQl3JPk+ONVFT24bcMKpBLBaYVu32TxU5nh
                SnUgnZUP5NbcA/FZGOhHibJXWpS2qdgXKxdJ5XbLwVaZOjex/2kskZGT4d9Mozd2
                TaGf+G0eHdP67Pv0RR0Tbc/3WeUiJ3IrhvNXuzDtJE3cfVa7o7P4NHmJweDyAmH3
                pvwPuxwXC65B2Xy9J6P9LjrRk5Sxcx0ki69bIImtt2dmefU6xqaWM/5TkshGsRGR
                xpl/j8nWZjEgQRCHLQzWwa80mMpkg/sTV9HB8Dx6jKXB/ZUhoHHBk2dxEuqPiApp
                GWSZI1b7rCoucL5mxAyE7+WL85MB+GqQk2dLsmijtWKP6T+MejteD+eMuMZ87zf9
                dOLITzNy4ZQ5bb0Sr74MTnB8G2+NszKTc0QWbej09+CVgI+WXTik9KveCjCHk9hN
                AHFiRSdLOkKEW39lt2c0Ui2cFmuqqNh7o0JMcccMyj6D5KbvtwEwXlGjefVwaaZB
                RA+GsCyRxj3qrg+E
                -----END CERTIFICATE-----

  - name: zitadel-secret
    chart: oci://ghcr.io/unique-ag/helm-charts/sscsid-keeper
    version: 1.1.5
    namespace: {{ .Values.self.namespace }}
    wait: false
    values:
      -
        keeper:
          image:
            repository: uniquehelloazure.azurecr.io/busybox
            tag: "1.37"
        spc:
          kvName: helloazuresensitive
          tenantId: {{ requiredEnv "ARM_TENANT_ID" }}
          identityId: {{ .Values.params.identities.keyVaultSecretsProvider.clientId }}
          secrets:
            - k8sSecretDataKey: {{ .Values.plain.zitadel.secretMasterKey.secretKeyName }}
              kvObjectName: {{ .Values.plain.zitadel.secretMasterKey.kvSecretName }}

  - name: zitadel
    chart: zitadel/zitadel
    namespace: {{ .Values.self.namespace }}
    version: 8.1.0
    createNamespace: true
    wait: false
    needs:
      - zitadel-certs
      - zitadel-secret
    values:
      -
        replicaCount: 2
        chownImage:
          repository: uniquehelloazure.azurecr.io/alpine
          tag: "3.19"
        image:
          repository: uniquehelloazure.azurecr.io/zitadel/zitadel
          tag: "v2.62.7"
        resources:
          requests:
            cpu: 1
            memory: 1Gi
          limits:
            memory: 1Gi
        nodeSelector:
          scalability: steady
          lifecycle: persistent
        initJob:
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              memory: 512Mi
        ingress:
          enabled: true
          className: azure-application-gateway
          annotations:
              appgw.ingress.kubernetes.io/ssl-redirect: "true"
              cert-manager.io/cluster-issuer: {{ .Values.plain.clusterIssuer.name }}
          hosts:
            - host: {{ printf "%s.%s" .Values.plain.zitadel.subDomainName .Values.params.zoneName }}
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls:
            - secretName: zitadel-le-tls
              hosts:
                - {{ printf "%s.%s" .Values.plain.zitadel.subDomainName .Values.params.zoneName}}
        securityContext:
          allowPrivilegeEscalation: false
        zitadel:
          dbSslCaCrtSecret: {{ .Values.plain.zitadel.secretCerts.secretName }}
          # The chart: https://github.com/zitadel/zitadel-charts/blob/main/charts/zitadel/values.yaml
          masterkeySecretName: {{ .Values.plain.zitadel.secretMasterKey.secretName }}
          secretConfig:
            Database:
              postgres:
                Host: {{ printf "%s%s/%s" "ref+azurekeyvault://" .Values.params.keyVaults.sensitive.name .Values.kvRefs.psql.host | fetchSecretValue | quote }}
                Port: {{ printf "%s%s/%s" "ref+azurekeyvault://" .Values.params.keyVaults.sensitive.name .Values.kvRefs.psql.port | fetchSecretValue | quote }}
                Database: zitadel
                MaxOpenConns: 50
                MaxIdleConns: 10
                MaxConnLifetime: 1h
                MaxConnIdleTime: 5m
                Options:
                User:
                  Username: z1t4d3l
                  Password: {{ printf "%s%s/%s" "ref+azurekeyvault://" .Values.params.keyVaults.sensitive.name .Values.kvRefs.synthetic.zitadel.psql.password | fetchSecretValue | quote }}
                  SSL:
                    Mode: verify-full
                    RootCert: /.secrets/ca.crt
                    Cert:
                    Key:
                Admin:
                  Username: {{ printf "%s%s/%s" "ref+azurekeyvault://" .Values.params.keyVaults.sensitive.name .Values.kvRefs.psql.username | fetchSecretValue | quote }}
                  Password: {{ printf "%s%s/%s" "ref+azurekeyvault://" .Values.params.keyVaults.sensitive.name .Values.kvRefs.psql.password | fetchSecretValue | quote }}
                  SSL:
                    Mode: verify-full
                    RootCert: /.secrets/ca.crt
                    Cert:
                    Key:
            FirstInstance:
              Org:
                Name: Cluster IAM
                Human:
                  Username: root@cluster-iam.localhost
                  Password: "RootPassword1!" # must be changed on first login so not a problem
          configmapConfig:
            # All values: https://github.com/zitadel/zitadel/blob/main/cmd/defaults.yaml
            ExternalDomain: {{ printf "%s.%s" .Values.plain.zitadel.subDomainName .Values.params.zoneName }} # ! Changing this breaks the system
            ExternalPort: 443 # ! Changing this breaks the system
            ExternalSecure: true # ! Changing this breaks the system
            LogStore:
              Access:
                Stdout:
                  Enabled: true
            TLS:
              Enabled: false # Application Gateway from Azure does this
            UserAgentCookie:
              Name: uniqueid.useragent
            Login:
              LanguageCookieName: uniqueid.login.lang
              CSRFCookieName: uniqueid.login.csrf
            Quotas:
              Access:
                ExhaustedCookieKey: uniqueid.quota.exhausted
            SystemDefaults:
              Multifactors:
                OTP:
                  Issuer: UNIQUE
              KeyConfig:
                PrivateKeyLifetime: 2160h # 90 days
                PublicKeyLifetime: 8760h # 1year. Public key lifetime must be min 2x private key lifetime
            DefaultInstance:
              InstanceName: UNIQUE
              DefaultLanguage: en
              DomainPolicy:
                UserLoginMustBeDomain: false
                ValidateOrgDomain: false
              LoginPolicy:
                AllowDomainDiscovery: true
                AllowRegister: false
              PrivacyPolicy:
                TOSLink: https://www.unique.ch/terms
                PrivacyLink: https://www.unique.ch/privacy
                SupportEmail: support@unique.ch
                HideLoginNameSuffix: true
                ErrorMsgPopup: false
                DisableWatermark: true
            FirstInstance:
              InstanceName: UNIQUE
              DefaultLanguage: en
              DomainPolicy:
                UserLoginMustBeDomain: false
                ValidateOrgDomain: false
              LoginPolicy:
                AllowDomainDiscovery: true
                AllowRegister: false
