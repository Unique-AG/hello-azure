environments:
  default:
    values:
      - ../../params.yaml
      - ../../terraform-outputs.yaml
      - ../../versions.yaml
      -
        self:
          namespace: unique

---

releases:

  - name: backend-service-theme
    chart: oci://ghcr.io/unique-ag/helm-charts/backend-service
    version: 3.1.1
    namespace: {{ .Values.self.namespace }}
    createNamespace: true
    wait: false
    values:
      - ./values/theme.bs.yaml
      -
        image:
          tag: "2025.04"
          repository: uniquehelloazure.azurecr.io/backend-service-theme
        env:
          CORS_ALLOWED_ORIGINS: https://hello.azure.unique.dev
          ZITADEL_PROJECT_ID: {{ .Values.plain.zitadel.projectId | quote }}
          UNIQUE_INSTALLATION_ID: hello.azure.unique.dev
        routes:
          hostname: api.gateway.azure.unique.dev
        secretProvider:
          tenantId: {{ requiredEnv "ARM_TENANT_ID" }}
          userAssignedIdentityID: {{ .Values.params.identities.keyVaultSecretsProvider.clientId }}
          vaults:
            helloazuresensitive:
              DATABASE_URL: {{ .Values.kvRefs.psql.databases.theme }}

  - name: backend-service-scope-management
    chart: oci://ghcr.io/unique-ag/helm-charts/backend-service
    version: 3.1.1
    namespace: {{ .Values.self.namespace }}
    createNamespace: true
    wait: false
    values:
      - ./values/scope-management.bs.yaml
      -
        image:
          tag: "2025.04"
          repository: uniquehelloazure.azurecr.io/backend-service-scope-management
        env:
          CORS_ALLOWED_ORIGINS: https://hello.azure.unique.dev
          ZITADEL_HOST: {{ printf "%s%s.%s" "https://" .Values.plain.zitadel.subDomainName .Values.params.zoneName }}
          ZITADEL_PROJECT_ID: {{ .Values.plain.zitadel.projectId | quote }}
          UNIQUE_INSTALLATION_ID: hello.azure.unique.dev
        envVars:
          - name: AMQP_USERNAME
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: username
          - name: AMQP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: password
          - name: AMQP_HOST
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: host
          - name: AMQP_PORT
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: port
        extraRoutes:
          scim:
            hostnames:
              - api.gateway.azure.unique.dev
        routes:
          hostname: api.gateway.azure.unique.dev
        secretProvider:
          tenantId: {{ requiredEnv "ARM_TENANT_ID" }}
          userAssignedIdentityID: {{ .Values.params.identities.keyVaultSecretsProvider.clientId }}
          vaults:
            helloazuresensitive:
              DATABASE_URL: {{ .Values.kvRefs.psql.databases.scopeManagement }}
            {{ .Values.params.keyVaults.main.name }}:
              ZITADEL_PAT: {{ .Values.kvRefs.synthetic.zitadel.patScopeManagement }}

  - name: backend-service-ingestion
    chart: oci://ghcr.io/unique-ag/helm-charts/backend-service
    version: 3.1.1
    namespace: {{ .Values.self.namespace }}
    createNamespace: true
    wait: false
    values:
      - ./values/ingestion.bs.yaml
      -
        image:
          tag: "2025.04"
          repository: uniquehelloazure.azurecr.io/backend-service-ingestion
        env:
          CORS_ALLOWED_ORIGINS: https://hello.azure.unique.dev
          ZITADEL_PROJECT_ID: {{ .Values.plain.zitadel.projectId | quote }}
          UNIQUE_INSTALLATION_ID: hello.azure.unique.dev
          INGESTION_UPLOAD_API_URL: https://api.gateway.azure.unique.dev/scoped/ingestion/upload
          ZITADEL_ROOT_ORG_ID: {{ .Values.plain.zitadel.rootOrgId | quote }}
        envVars:
          - name: RABBITMQ_USERNAME #! FIXME: @evrim should refactor to respect AMQP_USERNAME as well
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: username
          - name: AMQP_USERNAME
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: username
          - name: RABBITMQ_PASSWORD #! FIXME: @evrim should refactor to respect AMQP_PASSWORD as well
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: password
          - name: AMQP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: password
          - name: AMQP_HOST
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: host
          - name: AMQP_PORT
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: port
        routes:
          hostname: api.gateway.azure.unique.dev
        secretProvider:
          tenantId: {{ requiredEnv "ARM_TENANT_ID" }}
          userAssignedIdentityID: {{ .Values.params.identities.keyVaultSecretsProvider.clientId }}
          vaults:
            helloazuresensitive:
              DATABASE_URL: {{ .Values.kvRefs.psql.databases.ingestion }}
              AZURE_FGPT_STORAGE_CONNECTION_STRING: {{ .Values.kvRefs.st.permanentStorageConnectionString }}
              AZURE_INGESTION_CACHE_STORAGE_CONNECTION_STRING: {{ .Values.kvRefs.st.cacheStorageConnectionString }}
              INGESTION_ENCRYPTION_KEY: {{ .Values.kvRefs.synthetic.ingestion.encryptionKey }}
            {{ .Values.params.keyVaults.main.name }}:
              AZURE_OPENAI_API_ENDPOINT: {{ .Values.kvRefs.aoi.apiEndpoint }}
              AZURE_DOCUMENT_INTELLIGENCE_ENDPOINTS: {{ .Values.kvRefs.adi.endpoints }}
        serviceAccount:
          workloadIdentity:
            clientId: {{ .Values.params.identities.aksWorkloadIdentityCognitiveServices.clientId }}

  - name: backend-service-ingestion-worker
    chart: oci://ghcr.io/unique-ag/helm-charts/backend-service
    version: 3.1.1
    namespace: {{ .Values.self.namespace }}
    createNamespace: true
    wait: false
    values:
      - ./values/ingestion-worker.bs.yaml
      -
        image:
          tag: "2025.04"
          repository: uniquehelloazure.azurecr.io/backend-service-ingestion-worker
        env:
          CORS_ALLOWED_ORIGINS: https://hello.azure.unique.dev
          ZITADEL_PROJECT_ID: {{ .Values.plain.zitadel.projectId | quote }}
          UNIQUE_INSTALLATION_ID: hello.azure.unique.dev
        envVars:
          - name: RABBITMQ_USERNAME #! FIXME: @evrim should refactor to respect AMQP_USERNAME as well
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: username
          - name: AMQP_USERNAME
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: username
          - name: RABBITMQ_PASSWORD #! FIXME: @evrim should refactor to respect AMQP_PASSWORD as well
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: password
          - name: AMQP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: password
          - name: AMQP_HOST
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: host
          - name: AMQP_PORT
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: port
        secretProvider:
          tenantId: {{ requiredEnv "ARM_TENANT_ID" }}
          userAssignedIdentityID: {{ .Values.params.identities.keyVaultSecretsProvider.clientId }}
          vaults:
            {{ .Values.params.keyVaults.main.name }}:
              AZURE_OPENAI_API_ENDPOINT: {{ .Values.kvRefs.aoi.apiEndpoint }}
              AZURE_DOCUMENT_INTELLIGENCE_ENDPOINTS: {{ .Values.kvRefs.adi.endpoints }}
        serviceAccount:
          workloadIdentity:
            clientId: {{ .Values.params.identities.aksWorkloadIdentityCognitiveServices.clientId }}

  - name: backend-service-ingestion-worker-chat
    chart: oci://ghcr.io/unique-ag/helm-charts/backend-service
    version: 3.1.1
    namespace: {{ .Values.self.namespace }}
    createNamespace: true
    wait: false
    values:
      - ./values/ingestion-worker.bs.yaml
      - ./values/ingestion-worker-chat.bs.yaml
      -
        image:
          tag: "2025.04"
          repository: uniquehelloazure.azurecr.io/backend-service-ingestion-worker
        env:
          CORS_ALLOWED_ORIGINS: https://hello.azure.unique.dev
          ZITADEL_PROJECT_ID: {{ .Values.plain.zitadel.projectId | quote }}
          UNIQUE_INSTALLATION_ID: hello.azure.unique.dev
        envVars:
          - name: RABBITMQ_USERNAME #! FIXME: @evrim should refactor to respect AMQP_USERNAME as well
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: username
          - name: AMQP_USERNAME
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: username
          - name: RABBITMQ_PASSWORD #! FIXME: @evrim should refactor to respect AMQP_PASSWORD as well
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: password
          - name: AMQP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: password
          - name: AMQP_HOST
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: host
          - name: AMQP_PORT
            valueFrom:
              secretKeyRef:
                name: rabbitmqcluster-chat-default-user
                key: port
        secretProvider:
          tenantId: {{ requiredEnv "ARM_TENANT_ID" }}
          userAssignedIdentityID: {{ .Values.params.identities.keyVaultSecretsProvider.clientId }}
          vaults:
            {{ .Values.params.keyVaults.main.name }}:
              AZURE_OPENAI_API_ENDPOINT: {{ .Values.kvRefs.aoi.apiEndpoint }}
              AZURE_DOCUMENT_INTELLIGENCE_ENDPOINTS: {{ .Values.kvRefs.adi.endpoints }}
        serviceAccount:
          workloadIdentity:
            clientId: {{ .Values.params.identities.aksWorkloadIdentityCognitiveServices.clientId }}
