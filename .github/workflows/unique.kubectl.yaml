# -- Why Kubectl?
# 
# For the rest of our workloads we use Helm, but since the ApplicationSet requires active templating, we need to use Kubectl.
# The escaping of Go templates and strings is not straightforward, so we use Kubectl for this workload.

name: '[k8s][unique]'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false # otherwise helm upgrade can get stuck and one needs to manually clean the secrets and helm database

on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/kubectl.yaml
      - .github/workflows/unique.kubectl.yaml
      - 20_k8s_workloads/k8s/unique/chat.application-set.yaml
  push:
    branches:
      - main
    paths:
      - .github/workflows/kubectl.yaml
      - .github/workflows/unique.kubectl.yaml
      - 20_k8s_workloads/k8s/unique/chat.application-set.yaml
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  base:
    uses: ./.github/workflows/kubectl.yaml
    strategy:
      fail-fast: false
      matrix:
        release:
          - 20_k8s_workloads/k8s/unique/chat.application-set.yaml
    with:
      file_name: ${{ matrix.release }}
      action: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'apply' || 'diff' }}
    secrets: inherit
