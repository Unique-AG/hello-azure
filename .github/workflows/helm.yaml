name: "[helm] command"

on:
  workflow_call:
    inputs:
      file_name:
        description: The path of the file to operate on from root.
        required: true
        type: string
      action:
        description: "Helm action to perform: template, diff, sync or apply."
        default: template
        type: string

permissions:
  contents: read
  id-token: write

env:
  ARM_SUBSCRIPTION_ID: ${{ vars.SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.TENANT_ID }}
  ARM_CLIENT_ID: ${{ vars.CLIENT_ID }}

jobs:
  command:
    environment: 20-wl
    runs-on:
      group: hello.azure.unique.dev2

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login action
        uses: azure/login@v2
        with:
          tenant-id: ${{ vars.TENANT_ID }}
          client-id: ${{ vars.CLIENT_ID }}
          subscription-id: ${{ vars.SUBSCRIPTION_ID }}

      # Set up kubelogin for non-interactive authentication with Azure Kubernetes Service (AKS)
      - name: Set up kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: v0.1.6

      # Retrieve the Kubernetes context for the AKS cluster
      - name: Get AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: "resource-group-core"
          cluster-name: "aks-cluster"
          admin: 'false'
          use-kubelogin: 'true'

      - name: Setup Helm
        uses: mamezou-tech/setup-helmfile@v2.0.0
        with:
          helm-diff-plugin-version: v3.9.10
          helm-version: v3.15.4
          helmfile-version: v0.161.0
          kubectl-version: '1.29.0'
          helm-s3-plugin-version: v0.16.2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.0

      - name: Terraform Init
        id: init
        run : terraform -chdir=20_k8s_workloads/terraform-helm-mapping init -backend-config=config.auto.tfvars

      - name: Terraform save output
        id: output
        run : |
          terraform -chdir=20_k8s_workloads/terraform-helm-mapping output -json

      - name: Render terraform-outputs.yaml
        run: |
          echo '${{ steps.output.outputs.stdout }}' > 20_k8s_workloads/terraform-helm-mapping/terraform_output.json
          python 20_k8s_workloads/terraform-helm-mapping/terraform_helm_mapping.py --terraform-output=20_k8s_workloads/terraform-helm-mapping/terraform_output.json --template-file=20_k8s_workloads/helm/terraform-outputs.yaml.jinja --output-yaml-path=20_k8s_workloads/helm/terraform-outputs.yaml
          cat 20_k8s_workloads/helm/terraform-outputs.yaml

      - name: "🔍 Helm Template"
        if: inputs.action == 'template'
        #! Do not add --debug, it will print secrets!
        # Debug locally as described in repo readme
        run: |
          helmfile -f ${{ inputs.file_name }} ${{ inputs.release_name && format('-l name={0}', inputs.release_name) || '' }} template

      - name: "🪞 Helm Diff"
        if: inputs.action == 'diff'
        #! Do not add --debug, it will print secrets!
        # Debug locally as described in repo readme
        run: |
          helmfile -f ${{ inputs.file_name }} --concurrency 4 ${{ inputs.release_name && format('-l name={0}', inputs.release_name) || '' }} diff

      - name: "🚀 Helm Apply/Sync"
        if: inputs.action == 'apply' || inputs.action == 'sync'
        #! Do not add --debug, it will print secrets!
        # Debug locally as described in repo readme
        run: helmfile -f ${{ inputs.file_name }} ${{ inputs.release_name && format('-l name={0}', inputs.release_name) || '' }} sync

      - name: "💔 Helm Destroy"
        if: inputs.action && inputs.action == 'destroy'
        #! Do not add --debug, it will print secrets!
        # Debug locally as described in repo readme
        run: |
          if [[ -z "${{ inputs.release_name }}" ]]; then
            echo "error=Release name must be specified for destroy action." >> $GITHUB_OUTPUT
            exit 1
          fi
          helmfile -f ${{ inputs.file_name }} -l name=${{ inputs.release_name }} destroy
